name: Build

on:
  push:
    branches:
      - 'main'
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v3

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        cache-version: '1'

    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_13.3.1.app/Contents/Developer

    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          ${{ runner.os }}-pods-
    
    - name: Setup dependency
      run: bundle exec pod install

    - name: Setup GoogleService-Info.plist
      run: |
        cat << "EOF" > NowPlaying/Resources/Firebase/GoogleService-Info.plist
        ${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}
        EOF

    - name: Archive & export NowPlaying.ipa for development
      if: github.ref == 'refs/heads/main'
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_KEYCHAIN_NAME: "fastlane_keychain"
        MATCH_KEYCHAIN_PASSWORD: ""
      run: |
        MATCH_GIT_PRIVATE_KEY=$(echo -n "${{ secrets.MATCH_GIT_PRIVATE_KEY }}" | base64 -d)
        export MATCH_GIT_PRIVATE_KEY
        bundle exec fastlane ios development
        echo "app-distribution" > Products/destination.txt

    - uses: actions/upload-artifact@v2
      with:
        name: nowplaying-product
        path: |
          Product/NowPlaying.app.dSYM.zip
          Product/NowPlaying.ipa
          Products/destination.txt

  upload:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v2
      with:
        name: nowplaying-product

    - name: Get upload destination
      id: destination
      run:
        echo "::set-output name=value::$(cat Products/destination.txt)"

    - name: Seup app-distribution.json
      if: ${{ steps.destination.outputs.value == 'app-distribution' }}
      run: |
        cat << "EOF" > /tmp/app-distribution.json
        ${{ secrets.APP_DISTRIBUTION_JSON }}
        EOF

    - uses: wzieba/Firebase-Distribution-Github-Action@v1
      if: ${{ steps.destination.outputs.value == 'app-distribution' }}
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        groups: default
        serviceCredentialsFile: /tmp/app-distribution.json
        file: Products/NowPlaying.ipa
